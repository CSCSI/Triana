<!--

-->


<project name="triana-all" default="triana-app" basedir=".">

    <property name="version" value="4.0.0-SNAPSHOT"/>
    <property name="core-classes" value="../triana-core/target/classes"/>
    <property name="gui-classes" value="../triana-gui/target/classes"/>
    <property name="anno-classes" value="../triana-annotation/target/classes"/>
    <property name="types-classes" value="../triana-types/target/classes"/>
    <!--<property name="pegasus-classes" value="../triana-pegasus/target/classes"/>-->
    <property name="toolboxes" value="../triana-toolboxes"/>

    <target name="triana-app">
        <mkdir dir="dist"/>
        <mkdir dir="dist/classes"/>
        <path id="jar.class.path">
            <fileset dir="dist/lib">
                <include name="**/*.jar"/>
            </fileset>
        </path>
        <copy todir="dist/classes" overwrite="yes">
            <fileset dir="${core-classes}" includes="**/**"/>
        </copy>
        <copy todir="dist/classes" overwrite="yes">
            <fileset dir="${anno-classes}" includes="**/**" excludes=".svn"/>
        </copy>
        <copy todir="dist/classes" overwrite="yes">
            <fileset dir="${gui-classes}" includes="**/**" excludes=".svn"/>
        </copy>
        <copy todir="dist/classes" overwrite="yes">
            <fileset dir="${types-classes}" includes="**/**" excludes=".svn"/>
        </copy>
        <manifestclasspath property="manifest.classpath.prop" jarfile="dist/triana-app-${version}.jar">
            <classpath refid="jar.class.path"/>
        </manifestclasspath>
        <jar jarfile="dist/triana-app-${version}.jar">
            <manifest>
                <attribute name="Main-Class" value="Triana"/>
                <attribute name="Class-Path" value=". ${manifest.classpath.prop}"/>
            </manifest>
            <fileset dir="dist/classes" includes="**/**" excludes=".svn"/>
        </jar>
        <copy todir="dist" overwrite="yes">
            <fileset dir="bin" includes="**/*.sh,**/*.bat,**/*.properties"/>
            <filterset begintoken="@" endtoken="@">
                <filter token="version" value="${version}"/>
            </filterset>
        </copy>
        <delete dir="dist/classes"/>
        <chmod dir="dist" perm="775" includes="**/*.sh,**/*.bat"/>
        <mkdir dir="dist/toolboxes"/>
        <antcall target="toolbox">
            <param name="toolbox" value="audio"/>
        </antcall>
        <antcall target="toolbox">
            <param name="toolbox" value="common"/>
        </antcall>
        <antcall target="toolbox">
            <param name="toolbox" value="math"/>
        </antcall>
        <antcall target="toolbox">
            <param name="toolbox" value="signalproc"/>
        </antcall>
        <antcall target="toolbox">
            <param name="toolbox" value="imageproc"/>
        </antcall>
        <antcall target="toolbox">
            <param name="toolbox" value="gftgu"/>
        </antcall>
        <antcall target="dev-toolboxes"/>
        <mkdir dir="dist/modules"/>
        <!--<antcall target="module">
            <param name="module" value="triana-pegasus"/>
            <param name="targetModule" value="pegasus"/>
        </antcall>-->
    </target>

    <target name="module">
        <mkdir dir="dist/modules/${targetModule}"/>
        <copy todir="dist/modules/${targetModule}" overwrite="yes">
            <fileset dir="../${module}" includes="lib/**"/>
            <fileset dir="../${module}" includes="doc/**"/>
        </copy>
        <copy todir="dist/modules/${targetModule}" overwrite="yes">
            <fileset dir="../${module}" includes="xml/**"/>
        </copy>
        <copy todir="dist/modules/${targetModule}" overwrite="yes">
            <fileset dir="../${module}/target" includes="*.jar"/>
        </copy>
    </target>


    <target name="toolbox">
        <mkdir dir="dist/toolboxes/${toolbox}"/>
        <copy todir="dist/toolboxes/${toolbox}" overwrite="yes">
            <fileset dir="${toolboxes}/${toolbox}" includes="lib/**"/>
            <fileset dir="${toolboxes}/${toolbox}" includes="help/**"/>
        </copy>
        <copy todir="dist/toolboxes/${toolbox}" overwrite="yes">
            <fileset dir="${toolboxes}/${toolbox}" includes="xml/**"/>
        </copy>
        <copy todir="dist/toolboxes/${toolbox}" overwrite="yes">
            <fileset dir="${toolboxes}/${toolbox}/target" includes="*.jar"/>
        </copy>
    </target>

    <target name="dev-toolboxes">
        <mkdir dir="../toolboxes"/>
        <antcall target="dev-toolbox">
            <param name="toolbox" value="audio"/>
        </antcall>
        <antcall target="dev-toolbox">
            <param name="toolbox" value="common"/>
        </antcall>
        <antcall target="dev-toolbox">
            <param name="toolbox" value="math"/>
        </antcall>
        <antcall target="dev-toolbox">
            <param name="toolbox" value="signalproc"/>
        </antcall>
        <antcall target="dev-toolbox">
            <param name="toolbox" value="imageproc"/>
        </antcall>
        <antcall target="dev-toolbox">
            <param name="toolbox" value="gftgu"/>
        </antcall>
    </target>

    <target name="dev-toolbox">
        <mkdir dir="../toolboxes/${toolbox}"/>
        <copy todir="../toolboxes/${toolbox}" overwrite="yes">
            <fileset dir="${toolboxes}/${toolbox}" includes="lib/**"/>
            <fileset dir="${toolboxes}/${toolbox}" includes="help/**"/>
        </copy>
        <copy todir="../toolboxes/${toolbox}" overwrite="yes">
            <fileset dir="${toolboxes}/${toolbox}" includes="xml/**"/>
        </copy>
        <copy todir="../toolboxes/${toolbox}" overwrite="yes">
            <fileset dir="${toolboxes}/${toolbox}/target" includes="classes/**"/>
        </copy>
    </target>

    <target name="clean">
        <delete dir="dist"/>
        <delete dir="../toolboxes"/>
    </target>


    <target name="mvn-install">
        <!--
        <exec executable="mvn">
                    <arg value="-e"/>
                    <arg value="install:install-file"/>
                    <arg value="-Dfile=dist/triana-app-${version}.jar"/>
                    <arg value="-DpomFile=pom.xml"/>
                    <arg value="-Dversion=${version}"/>
                    <arg value="-Dpackaging=jar"/>
                </exec>-->

    </target>

    <target name="mvn-deploy">
        <!--
        <exec executable="mvn">
                    <arg value="-e"/>
                    <arg value="deploy:deploy-file"/>
                    <arg value="-Dfile=dist/triana-app-${version}.jar"/>
                    <arg value="-DpomFile=pom.xml"/>
                    <arg value="-Dversion=${version}"/>
                    <arg value="-Durl=scp://lapis.cs.cf.ac.uk/nfs/mntI3/static/triana/html/maven"/>
                    <arg value="-DrepositoryId=trianacode-maven-repos"/>
                    <arg value="-Dpackaging=jar"/>
                </exec>-->

    </target>

</project>
